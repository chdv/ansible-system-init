---
- name: Installing system
  hosts: localhost
  vars_files:
    - parameters.yaml
    - test_parameters.yaml

  tasks:

    - name: Synchronize bin-scripts
      ansible.posix.synchronize:
        src: ./bin/
        dest: "{{ scripts_path }}/"
        delete: true  

    - name: Archive packages section
      import_tasks: archive_packages.yaml

    - name: Apt packages section
      import_tasks: apt_packages.yaml

    - name: Download deb packages
      get_url:
        url: "{{ item }}"
        dest: "{{ packages_distr_dir }}"
      register: deb_packages_downloaded
      loop: "{{ deb_packages }}"

    - name: Install deb packages
      apt:
        deb: "{{ item.dest }}"
      loop: "{{ deb_packages_downloaded['results'] }}"

    - name: Installing snap packages
      snap:
        name: "{{ item.name }}"
        classic: "{{ item.classic }}"
      loop: "{{ snap_packages }}"

    - name: Add the flathub flatpak repositories
      community.general.flatpak_remote:
        name: "{{ item.name }}"
        state: present
        flatpakrepo_url: "{{ item.url }}"
      loop: "{{ flatpak_repositories }}"

    - name: Installing flatpak packages
      community.general.flatpak:
        name: "{{ item }}"
        state: latest
      loop: "{{ flatpak_packages }}"

    - name: Fill and copying config files
      template:
        src: "./config/{{ item.name }}"
        dest: "{{ item.path }}"
        owner: root
        group: root
        mode: '0644'
      register: copying_config
      loop: "{{ config_files }}"

    - name: Restarting services
      service:
        name: "{{ item.item.service }}"
        enabled: true
        state: restarted
      when: item.changed
      loop: "{{ copying_config['results'] }}"

    - name: Copying local bin files
      copy:
        src: "./distr/{{ item }}"
        dest: "/usr/local/bin/"
        owner: root
        group: root
        mode: '0755'
      loop: "{{ local_bin }}"

    - name: Invoke shell scripts
      shell:
        cmd: "{{ item }}"
      loop: "{{ shell_scripts }}"

    - name: Feel .bashrc
      ansible.builtin.blockinfile:
        path: "{{ bashrc_path }}"
        block: |
          export SYSTEMD_LESS=FRXMK 
          alias k='kubectl'
          alias p='podman'
          export KUBE_EDITOR="nano"
          export EDITOR="nano"
          source <(kubectl completion bash | sed s/kubectl/k/g)
          source <(podman completion bash | sed s/podman/p/g)

    - name: Feel /etc/crontab
      ansible.builtin.blockinfile:
        path: "/etc/crontab"
        block: |
          */10 * * * * root {{ scripts_path }}/metrics
          */5 * * * * root {{ scripts_path }}/web_screen
          */10 * * * * {{ username }} {{ scripts_path }}/sync_ar   

    - name: Copying systemd files
      copy:
        src: "./systemd/weather.service"
        dest: "{{ user_systemd_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0664'

    - name: Enable weather service
      become_user: "{{ username }}"
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enabled: true
        name: weather     
        scope: user   